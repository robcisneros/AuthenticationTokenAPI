{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\INT1342\\\\Documents\\\\DesarrolloWeb\\\\curso-react\\\\react_16_Authentication-Tokens\\\\src\\\\components\\\\Auth\\\\AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport classes from \"./AuthForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = () => {\n  _s();\n\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n    setIsLoading(true);\n    let url;\n    const APIKEYFIREBASE = \"AIzaSyAxQMZVaa7wh4ykYFpDuDNoXxgvaW2i2SU\";\n\n    if (isLogin) {\n      url = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=\" + APIKEYFIREBASE;\n    } else {\n      url = \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=\" + APIKEYFIREBASE;\n    }\n\n    const sendData = async () => {\n      const response = await fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify({\n          email: enteredEmail,\n          password: enteredPassword,\n          returnSecureToken: true\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const data = await response.json();\n      setIsLoading(false);\n\n      if (response.ok) {\n        return data;\n      } else {\n        let errorMessage = \"Authentication failed!\";\n\n        if (data && data.error && data.error.message) {\n          errorMessage = data.error.message;\n        }\n\n        throw new Error(errorMessage);\n      }\n    };\n\n    sendData().then(data => {\n      console.log(data);\n    }).catch(err => alert(err.message));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? \"Login\" : \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          required: true,\n          ref: emailInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          required: true,\n          ref: passwordInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [!isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? \"Login\" : \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Sending request...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? \"Create new account\" : \"Login with existing account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthForm, \"62+DaFItGtvC0lYtzjtoDaSR47Y=\");\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["C:/Users/INT1342/Documents/DesarrolloWeb/curso-react/react_16_Authentication-Tokens/src/components/Auth/AuthForm.js"],"names":["useRef","useState","classes","AuthForm","isLogin","setIsLogin","isLoading","setIsLoading","emailInputRef","passwordInputRef","switchAuthModeHandler","prevState","submitHandler","event","preventDefault","enteredEmail","current","value","enteredPassword","url","APIKEYFIREBASE","sendData","response","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","data","json","ok","errorMessage","error","message","Error","then","console","log","catch","err","alert","auth","control","actions","toggle"],"mappings":"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","sourcesContent":["import { useRef, useState } from \"react\";\n\nimport classes from \"./AuthForm.module.css\";\n\nconst AuthForm = () => {\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    setIsLoading(true);\n    let url;\n    const APIKEYFIREBASE = \"AIzaSyAxQMZVaa7wh4ykYFpDuDNoXxgvaW2i2SU\";\n    if (isLogin) {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=\"  + APIKEYFIREBASE;\n    } else {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=\" + APIKEYFIREBASE;\n    }\n    const sendData = async () => {\n      const response = await fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify({\n          email: enteredEmail,\n          password: enteredPassword,\n          returnSecureToken: true,\n        }),\n        headers: { \"Content-Type\": \"application/json\" },\n      });\n      const data = await response.json();\n      setIsLoading(false);\n      if (response.ok) {\n        return data;\n      } else {\n        let errorMessage = \"Authentication failed!\";\n        if (data && data.error && data.error.message) {\n          errorMessage = data.error.message;\n        }\n        throw new Error(errorMessage);\n      }\n    };\n    sendData()\n      .then((data) => {\n        console.log(data);\n      })\n      .catch((err) => alert(err.message));\n  };\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Your Email</label>\n          <input type=\"email\" id=\"email\" required ref={emailInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Your Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            required\n            ref={passwordInputRef}\n          />\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && (\n            <button>{isLogin ? \"Login\" : \"Create Account\"}</button>\n          )}\n          {isLoading && <p>Sending request...</p>}\n          <button\n            type=\"button\"\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n"]},"metadata":{},"sourceType":"module"}