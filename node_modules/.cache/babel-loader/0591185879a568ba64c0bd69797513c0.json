{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\INT1342\\\\Documents\\\\DesarrolloWeb\\\\curso-react\\\\react_16_Authentication-Tokens\\\\src\\\\store\\\\auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet logoutTimer;\nconst AuthContext = /*#__PURE__*/React.createContext({\n  token: \"\",\n  isLoggedIn: false,\n  login: token => {},\n  logout: () => {}\n});\n\nconst calculateRemainingTime = expirationTime => {\n  const currentTime = new Date().getTime();\n  const adjExpirationTime = new Date(expirationTime).getTime();\n  const remainingDuration = adjExpirationTime - currentTime;\n  return remainingDuration;\n};\n\nconst retrieveStoredToken = () => {\n  const storedToken = localStorage.getItem(\"token\");\n  const storedExpirationDate = localStorage.getItem(\"expirationTime\");\n  const remainingTime = calculateRemainingTime(storedExpirationDate);\n\n  if (remainingTime <= 60000) {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"expirationTime\");\n    return null;\n  }\n\n  return {\n    token: storedToken,\n    duration: remainingTime\n  };\n};\n\nexport const AuthContextProvider = props => {\n  _s();\n\n  const tokenData = retrieveStoredToken();\n  let initialToken;\n\n  if (tokenData) {\n    initialToken = tokenData.token;\n  }\n\n  const [token, setToken] = useState(initialToken);\n  const userIsLoggedIn = !!token; //de true/false value a true/false boolean\n\n  const logoutHandler = useCallback(() => {\n    setToken(null);\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"expirationTime\");\n\n    if (logoutTimer) {\n      clearTimeout(logoutTimer);\n    }\n  }, []);\n\n  const loginHandler = (token, expirationTime) => {\n    setToken(token);\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"expirationTime\", expirationTime);\n    const remainingTime = calculateRemainingTime(expirationTime);\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\n  };\n\n  useEffect(() => {\n    if (tokenData) {\n      console.log(tokenData.duration);\n      logoutTimer = setTimeout(logoutHandler, tokenData.duration);\n    }\n  }, [tokenData, logoutHandler]);\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextProvider, \"Lh1CfGbFk5nTLZoGW/pEiX6CFRc=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["C:/Users/INT1342/Documents/DesarrolloWeb/curso-react/react_16_Authentication-Tokens/src/store/auth-context.js"],"names":["React","useEffect","useState","useCallback","logoutTimer","AuthContext","createContext","token","isLoggedIn","login","logout","calculateRemainingTime","expirationTime","currentTime","Date","getTime","adjExpirationTime","remainingDuration","retrieveStoredToken","storedToken","localStorage","getItem","storedExpirationDate","remainingTime","removeItem","duration","AuthContextProvider","props","tokenData","initialToken","setToken","userIsLoggedIn","logoutHandler","clearTimeout","loginHandler","setItem","setTimeout","console","log","contextValue","children"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\r\n\r\nlet logoutTimer;\r\n\r\nconst AuthContext = React.createContext({\r\n  token: \"\",\r\n  isLoggedIn: false,\r\n  login: (token) => {},\r\n  logout: () => {},\r\n});\r\n\r\nconst calculateRemainingTime = (expirationTime) => {\r\n  const currentTime = new Date().getTime();\r\n  const adjExpirationTime = new Date(expirationTime).getTime();\r\n  const remainingDuration = adjExpirationTime - currentTime;\r\n  return remainingDuration;\r\n};\r\n\r\nconst retrieveStoredToken = () => {\r\n  const storedToken = localStorage.getItem(\"token\");\r\n  const storedExpirationDate = localStorage.getItem(\"expirationTime\");\r\n  const remainingTime = calculateRemainingTime(storedExpirationDate);\r\n\r\n  if (remainingTime <= 60000) {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"expirationTime\");\r\n    return null;\r\n  }\r\n\r\n  return {\r\n    token: storedToken,\r\n    duration: remainingTime,\r\n  };\r\n};\r\n\r\nexport const AuthContextProvider = (props) => {\r\n  const tokenData = retrieveStoredToken();\r\n  let initialToken;\r\n  if (tokenData) {\r\n    initialToken = tokenData.token;\r\n  }\r\n\r\n  const [token, setToken] = useState(initialToken);\r\n  const userIsLoggedIn = !!token; //de true/false value a true/false boolean\r\n\r\n  const logoutHandler = useCallback(() => {\r\n    setToken(null);\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"expirationTime\");\r\n\r\n    if (logoutTimer) {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  }, []);\r\n\r\n  const loginHandler = (token, expirationTime) => {\r\n    setToken(token);\r\n    localStorage.setItem(\"token\", token);\r\n    localStorage.setItem(\"expirationTime\", expirationTime);\r\n\r\n    const remainingTime = calculateRemainingTime(expirationTime);\r\n\r\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if(tokenData){\r\n      console.log(tokenData.duration);\r\n      logoutTimer = setTimeout(logoutHandler, tokenData.duration);\r\n    }\r\n  }, [tokenData, logoutHandler]);\r\n\r\n  const contextValue = {\r\n    token: token,\r\n    isLoggedIn: userIsLoggedIn,\r\n    login: loginHandler,\r\n    logout: logoutHandler,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n"]},"metadata":{},"sourceType":"module"}